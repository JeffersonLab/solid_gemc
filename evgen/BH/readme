==== grape-dilepton  ====
http://research.kek.jp/people/tabe/grape
BH from electron on proton, used by the experiments at DESY/HERA

similar result comparing to LPAIR, see http://research.kek.jp/people/tabe/grape/heramc1998/proceedings/node4.html#SECTION00040000000000000000

** virtual machine and how to run it **
It was written in early 2000 and depends on an older version of cernlib.
To repeat its exact environment, I built a redhat7 virtual machine to run it.
download the file [http://hallaweb.jlab.org/12GeV/SoLID/download/sim/package/RH7.zip here] and decompress it using zip. You need free vmplayer [http://www.vmware.com/go/downloadplayer] on linux or windows to run the virtual machine. On Mac, download the tool [https://my.vmware.com/group/vmware/get-download?downloadGroup=OVFTOOL352] and convert "ovftool name.vmx name.ova", then use virtualbox [https://www.virtualbox.org/wiki/Downloads] to import the ova file run the virtual machine

The virtual machine only has terminal, Xwindow is not working, so use "ctr+F*" to swtich between terminals. both user "zwzhao" and root has passwrod "111111", 
The code is under /home/zwzhao/grape-dilpeton_v1.1k ( I had to modify its makefile to compile it)
My work dir is at /home/zwzhao/grape_work where you can see some examples, Read the code website and its "README" file to understand how its input parameters defined in "grape.cards" and how to run it. Basically, create a new dir, create a new "grape.cards" file, run "/home/zwzhao/grape-dilpeton_v1.1k/src/integ | cat > integ.log" (take a long time like 10 hours), then run "/home/zwzhao/grape-dilpeton_v1.1k/src/spring | cat > spring.log", then an ntuple "grp.rz" is produced. You can convert it to root file "grp.root" by "h2root grp.rz", then analysis it by using code from https://jlabsvn.jlab.org/svnroot/solid/evgen/BH

** general note **
1. It's default +Z axis is along proton beam direction. So is Theta defined in its input file
if we are using electron beam direction as +Z axis, we need to rotate along Y 180 degree to analyses results
2. Variaous cuts like mom and angle etc can be applied in the input file, they can be used carefully to focus the simulation on interested physical region and particular detecctor acceptance and trigger condition.
3. with interference, the scattering e- and decay e- are not distinguishable.
No cut can be applied on any of them without careful consideration, like PMIN,PMAX,THMIN,THMAX,MASSLL etc and a lepton stored in the 8th line has smaller transverse momentum than that of a lepton in the 10th line of the output
4. output has two trees "h1" including event info and "h11" including xsec[0] is total crossection in pb for the simulated phasespace, divide it by number of event generated to have the weight factor

** known problem **
1. occasionally, integ wouldn't end because grid calculation can't converge for certain configuration. 2. spring seems have a fixed random seed, so every time it generator the same file. 3. spring will crash when events go more than 2.9M due to unknown reason.

=====analysis code ==================================================
anaGrape.C can be used to analyze the output tree "grp.root" from grape-dilepton

It's too slow to run as script, need to run after compiling

root file with acceptance histogram is needed for anaGrape.C to work
download
acceptance_solid_JPsi_electron_target315_output.root
clasev_acceptance.root
from
http://hallaweb.jlab.org/12GeV/SoLID/download/sim/acceptance/

cd your_directoty_where_grp.root_is 
cp acceptance_root_file ../
.x anaGrape.C+("SoLID")

The parameter can be SoLID or CLAS12

root2lund.C to convert "grp.root" to "grp.lund" with vertex info added in, use it after compiling otherwise it takes large mem and too slow, run it in the dir where "grp.root" is
root -b -q 'root2lund.C+'

compare.C to compare different configuration
