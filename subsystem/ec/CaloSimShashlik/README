------------------------------------------------------------------ 
New for CaloSimShashlik
- Jin Huang <jinhuang@jlab.org>
------------------------------------------------------------------

CaloSimShashlik is based on CaloSim, and simulate for Shashlik-type calorimeters. Here are a few instruction to use CaloSimShashlik:

•	CaloSimShashlik/include/Config.h specify the configuration for calorimeter, e.g. how many layers are in the module. It was varied a lot to search for the optimal configuration for SoLID. I also use it in the analysis script to keep simulation and reconstruction synced. 
•	CaloSimShashlik/src/CaloSimDetectorConstruction.cc contain the construction of detectors. The main switch is CaloSimDetectorConstruction::Construct(), which lead to several different designs, e.g. Hexagon layout
•	The input track can be from a text file or from a random range, depending on the command. Examples are 
o	Text input : CaloSimShashlik/mac/TestFile.mac 
Each line of the text file represent one event, follow the format of sscanf(buffer, "%f\t%f\t%f\t%f\t%f\t%f\t%f\t%f\n", &X0, &Y0, &Z0, &XP0, &YP0, &ZP0, &E, &theta);
o	Flat random range : CaloSimShashlik/mac/LowEBgdElec.mac , which cover kinematic energy range of minimal to 20GeV, polar angle of 10 to 10+10 degrees. 
•	The output out.root contains two trees, which is synced to each other. I usually do T->AddFriend(ntuple) to use both. TTree T is defined in CaloSimSD::CaloSimSD(), in which there are two species of arrays
o	block* is arrays of the calorimeter modules
o	*layer is arrays of the longitudinal layers

o	*WEdep* is energy deposition in absorber, currently the material is lead
o	*fiberEdep* is the energy deposition in the scintillator
o	*glueEdep* is the energy deposition between scintillator and absorbers, currently the gap is filled with air.
o	*fiberPhotons* is the expected photos at the output of WLS fiber, parameterized from a CLEO NIM paper. It is also generated using a Poisson distribution to simulate statistical fluctuations. 

This code was compiled with geant4.9.4. And the first thing a new user can try after installation: (1) run the compiled code, CaloSimShashlik, and a GUI will show up. (2) run mac/TestFile.mac to open an event display (need to change the initial track file though). For batch runs: CaloSimShashlik <*.mac> <*.root>


------------------------------------------------------------------ 
From the old CaloSim 
------------------------------------------------------------------

============= what it does ====================
The code is doing a simulation for Calorimeter Scifi

=============how to compile =====================
you need to 
1. have a standard build of geant4 with openGL and setup its environment. (I used version 4.9.3.p02 with instruction http://geant4.slac.stanford.edu/installation/)
2. have compat-gcc-*-c++* package installed (I use compat-gcc-34-c++-3.4.6-20.fc14.x86_64 on my fedora 14 x64 system) and make sure the include directory in GNUmakefile is correct
3. then you can type "make", binary will be in bin/*

============== how to run =========================
1. interactive mode, 
just run "CaloSim", it will use mac/vis.mac to create openGL graphic windows

2. batch mode
eg. "CaloSim mac/100_2GeV.mac out.root"

3. options
besides standard geant4 options, there are some addtional option control particle gun. 
use "ls /Gun" after start interactive mode to see them

4. turn field on/off
  in CaloSimDetectorConstruction.cc, comment/uncomment line 
  "fpMagField->SetMagFieldValue(2*tesla);"

5. change radiation material
   in CaloSimDetectorConstruction.cc, modify the line
   "G4LogicalVolume* logicCaloBlock = new G4LogicalVolume(solidCaloBlock,Tungsten,"CaloBlockLV");"

============== script ==============================
in script directory, find some script used to view resulting root files


============== doc ================================
CaloSim.pdf from original authur


============== old stuff ===========================
we may dig out useful stuff from old mac, old scripts, old src.


--------------
Zhiwen Zhao
3/17/2011


============== Update List ===========================

03/21/2011 Jin Huang <jinhuang@jlab.org>
	Added support for
    * Set field from mac script: ex. mac/TestFile.mac
    * Added hadron simulation, beam of pion, kaon from mac script: ex. mac/TestFile.mac
    * Added option for preshower - shower confirguration: switch configurations at src/CaloSimDetectorConstruction.C::Construct()
    * Script tools to convert GEMC phase space to input file and load via mac scripts: high level script at script/GEMC2CaloSimScript.C



