== intro ==
Read tracking resolution for various SoLID experimental setup by using resolution file 
from summary of tracking studies

== how to use it ==

Class Lresolution is on Lresolution.h 
You should make an object and call its main function below

  int GetResolution(const double * kin, double * res, const int pid);
  int GetResolution(const double * kin, double * res, const char pname[]);
/* Get resolution to res: delta_p/p(no unit), theta(deg), phi(deg), vertexz(cm)
  multiply by res_factor=1.5 to for safety
  Kinematic variables kin: p(GeV), theta(deg), phi(deg)
  Particle: e+(1), e-(-1), mu+(2), mu-(-2), pi+(3), pi-(-3), K+(4), K-(-4), p(5). Default with e-(-1)
  Return O:normal, 1:error, 2: out of range */

for other functions, refer to the source code
  
see test.C for a simple example

see this code for a complete example
https://jlabsvn.jlab.org/svnroot/solid/evgen/BH/anaGrape.C
you would need to have a link like this in the dir where you will run your code to find the resolution file
ln -s /home/zwzhao/solid/solid_svn/solid/subsystem/gem/resolution/v1/res_file ./

== log ==
=== 2016/05 === 
* code developed with ROOT v5.34, first checkin by Zhiwen Zhao & Tianbo Liu
* resolution file generated by Weizhi Xiong based on Zhiwen's SoLID_GEMC simulation file in 2016/01,
* The simulation has all energy loss by various materials, but no background. Thus we apply a safe factor 1.5 on top of the result in the code
* In dir res_file, each subdirs corresponds to a detector configuration 
where pdf files like "<configuration>_<particle>_<vertex variable>_resolution_process_noise.pdf" and "<configuration>_resolution_2d_histogram.pdf"
show the resolution for each momentum and polar angle bin.
and root files store the resolution values in a root 2D histogram format. (x and y of the histogram correspond to momentum and theta, and z gives the resolution value
* some particles don't have resolution files yet
